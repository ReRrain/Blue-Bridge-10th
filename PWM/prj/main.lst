C51 COMPILER V9.52.0.0   MAIN                                                              03/08/2019 17:33:12 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE MAIN
OBJECT MODULE PLACED IN .\main.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\src\main.c BROWSE DEBUG OBJECTEXTEND PRINT(.\main.lst) OBJECT(.\main.obj
                    -)

line level    source

   1          /*
   2          *******************************************************************************
   3          * 文件名：main.c
   4          * 描  述：呼吸灯
   5          * 作  者：CLAY
   6          * 版本号：v1.0.0
   7          * 日  期: 2018年2月10日
   8          * 备  注：利用定时器在P0^0输出PWM波,P0^0此刻选通LED
   9          *        注意看35行注释。 
  10          *******************************************************************************
  11          */
  12          
  13          #include <reg52.h>
  14          #define u8 unsigned char 
  15          #define u16 unsigned int
  16          #define u32 unsigned long
  17          
  18          sbit PWMOUT = P0^0;
  19          
  20          u8 HighRH = 0;
  21          u8 HighRL = 0;
  22          u8 LowRH  = 0;
  23          u8 LowRL  = 0;
  24          
  25          void ConfigPWM(u16 fr, u8 dc);//注意一个频率一个占空比，频率是u16
  26          void ClosePWM();
  27          
  28          void CloseFucker();
  29          
  30          void main()
  31          {
  32   1          u32 i;
  33   1          CloseFucker();
  34   1          P2 = (P2 & 0x1F) | 0x80;
  35   1          P0 = 0xFF;//务必先关闭，然后才能选通对应的！
  36   1          EA = 1;
  37   1      
  38   1      
  39   1          while (1)//注意占空比指的是高电平的持续时间，CT107D小灯是低电平点亮。
  40   1          {
  41   2              ConfigPWM(100, 10);    //频率100Hz，占空比10%
  42   2              for (i=0; i<100000; i++);
  43   2              ClosePWM();
  44   2              ConfigPWM(100, 40);    //频率100Hz，占空比40%
  45   2              for (i=0; i<100000; i++);
  46   2              ClosePWM();
  47   2              ConfigPWM(100, 90);    //频率100Hz，占空比90%
  48   2              for (i=0; i<100000; i++);
  49   2              ClosePWM();            //关闭PWM，相当于占空比100%
  50   2              for (i=0; i<100000; i++);
  51   2          }
  52   1      }
  53          
  54          void CloseFucker()
C51 COMPILER V9.52.0.0   MAIN                                                              03/08/2019 17:33:12 PAGE 2   

  55          {
  56   1          P2 = (P2 & 0x1F) | 0xA0; //关闭蜂鸣器和继电器
  57   1          P0 = P0 & 0xAF;
  58   1          P2 = 0x00;
  59   1      }
  60          
  61          
  62          void ConfigPWM(u16 fr, u8 dc) //这一段配置非常有意思
  63          {
  64   1          u32 tmp;//用来存临时总值
  65   1          u16 high, low; //用来存高电平低电平的总值
  66   1      
  67   1          tmp = (11059200/12)/fr;//算出对应频率的总值
  68   1          high = (tmp*dc)/100;//算出高电平总值
  69   1          low = tmp - high;//算出低电平总值
  70   1          high = 65536 - high;//对应该的计数开始值
  71   1          low = 65536 - low;
  72   1          HighRH = (u8)(high >> 8);//它们四个是个全局变量，在中断给P00口赋值。
  73   1          HighRL = (u8)high;
  74   1          LowRH = (u8)(low >> 8);
  75   1          LowRL = (u8)low;
  76   1      
  77   1          //AUXR &= 0x7F;//这里我没加AUXR寄存器的相关设置，15上电默认是12T
  78   1          TMOD &= 0xF0;
  79   1          TMOD |= 0x01;
  80   1          TH0 = HighRH;
  81   1          TL0 = HighRL;
  82   1          ET0 = 1;
  83   1          TR0 = 1;
  84   1          PWMOUT = 1;
  85   1      
  86   1      }
  87          
  88          void ClosePWM()
  89          {
  90   1          TR0 = 0;
  91   1          ET0 = 0;
  92   1      
  93   1          PWMOUT = 1;
  94   1      }
  95          
  96          void InterruptTimer() interrupt 1
  97          {
  98   1          if(PWMOUT == 1)
  99   1          {
 100   2              TH0 = LowRH;
 101   2              TL0 = LowRL;
 102   2              PWMOUT = 0;//注意，赋完值要记得把引脚的电平翻转啊！！！
 103   2          }
 104   1          else
 105   1          {
 106   2              TH0 = HighRH;
 107   2              TL0 = HighRL;
 108   2              PWMOUT = 1;
 109   2          }
 110   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    413    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
C51 COMPILER V9.52.0.0   MAIN                                                              03/08/2019 17:33:12 PAGE 3   

   PDATA SIZE       =   ----    ----
   DATA SIZE        =      4       9
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
