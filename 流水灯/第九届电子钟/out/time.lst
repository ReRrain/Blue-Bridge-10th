C51 COMPILER V9.52.0.0   TIME                                                              03/09/2019 11:06:36 PAGE 1   


C51 COMPILER V9.52.0.0, COMPILATION OF MODULE TIME
OBJECT MODULE PLACED IN ..\out\time.obj
COMPILER INVOKED BY: C:\Keil\C51\BIN\C51.EXE ..\src\time.c LARGE BROWSE DEBUG OBJECTEXTEND PRINT(..\out\time.lst) OBJECT
                    -(..\out\time.obj)

line level    source

   1          #include "config.h"
   2          #include "ds1302.h"
   3          #include "led.h"
   4          #include "main.h"
   5          
   6          struct sTime setClockTime;
   7          struct sTime setAlarmTime={0,0,0,0,0,0,0};//闹钟时间结构体，初始化为0
   8          
   9          void SetClockTimer()
  10          {
  11   1              if(flagenter == 0)//允许得到实时时间
  12   1              {
  13   2                      GetRealTime(&setClockTime);//得到实时时间
  14   2                      flagenter = 1;//马上置1，表示不再获取实时时间了，确保设置模式下，数码管不再刷新时间
  15   2              }
  16   1              if(numBlinkSta == 1)
  17   1              {
  18   2                      LedBuff[index] = 0xFF;
  19   2                      LedBuff[index - 1] = 0xFF; 
  20   2              }
  21   1              else
  22   1              {
  23   2                      RefreshSetTime(&setClockTime);//显示时间
  24   2              }       
  25   1      }
  26          
  27          void SetAlarmTimer()
  28          {
  29   1              if(numBlinkSta == 1)
  30   1              {
  31   2                      LedBuff[index] = 0xFF;
  32   2                      LedBuff[index - 1] = 0xFF; 
  33   2              }
  34   1              else
  35   1              {
  36   2                      RefreshSetTime(&setAlarmTime);
  37   2              }
  38   1      }
  39          
  40          void AddTime(struct sTime *time)
  41          {
  42   1              if(index == 7)
  43   1              {
  44   2                      (time->hour) += 0x01;
  45   2                      if(((time->hour) & 0x0F) == 0x0A)//如果低四位是A的情况
  46   2                      {
  47   3                              (time->hour) = ((time->hour) & 0xF0) + 0x10; //显示正常值
  48   3                      }
  49   2                      if((time->hour) > 0x23)
  50   2                      {
  51   3                              (time->hour) = 0x00;
  52   3                      }
  53   2              }
  54   1              else if(index == 4)
C51 COMPILER V9.52.0.0   TIME                                                              03/09/2019 11:06:36 PAGE 2   

  55   1              {
  56   2                      time->min += 0x01;
  57   2                      if(((time->min) & 0x0F) == 0x0A)
  58   2                      {
  59   3                              time->min = ((time->min) & 0xF0) + 0x10;
  60   3                      }
  61   2                      if((time->min) > 0x59)
  62   2                      {
  63   3                              time->min = 0x00;
  64   3                      }
  65   2              }
  66   1              else
  67   1              {
  68   2                      (time->sec) += 0x01;
  69   2                      if(((time->sec) & 0x0F) == 0x0A)
  70   2                      {
  71   3                              time->sec = ((time->sec) & 0xF0) + 0x10;
  72   3                      }
  73   2                      if((time->sec) > 0x59)
  74   2                      {
  75   3                              time->sec = 0x00;
  76   3                      }
  77   2              }
  78   1      }
  79          
  80          void SubTime(struct sTime *time)
  81          {
  82   1              if(index == 7)
  83   1              {
  84   2                      (time->hour) -= 0x01;
  85   2                      if(((time->hour) & 0x0F) == 0x0F)//如果低四位是A的情况
  86   2                      {
  87   3                              (time->hour) = ((time->hour) & 0xF0) + 0x09; //显示正常值
  88   3                      }
  89   2                      if((time->hour) == 0xF9)
  90   2                      {
  91   3                              (time->hour) = 0x23;
  92   3                      }
  93   2              }
  94   1              else if(index == 4)
  95   1              {
  96   2                      time->min -= 0x01;
  97   2                      if(((time->min) & 0x0F) == 0x0F)
  98   2                      {
  99   3                              time->min = ((time->min) & 0xF0) + 0x09;
 100   3                      }
 101   2                      if((time->min) == 0xF9)
 102   2                      {
 103   3                              time->min = 0x59;
 104   3                      }
 105   2              }
 106   1              else
 107   1              {
 108   2                      (time->sec) -= 0x01;
 109   2                      if(((time->sec) & 0x0F) == 0x0F)
 110   2                      {
 111   3                              time->sec = ((time->sec) & 0xF0) + 0x09;
 112   3                      }
 113   2                      if((time->sec) == 0xF9)
 114   2                      {
 115   3                              time->sec = 0x59;
 116   3                      }
C51 COMPILER V9.52.0.0   TIME                                                              03/09/2019 11:06:36 PAGE 3   

 117   2              }
 118   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =    448    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =     16    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----    ----
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
